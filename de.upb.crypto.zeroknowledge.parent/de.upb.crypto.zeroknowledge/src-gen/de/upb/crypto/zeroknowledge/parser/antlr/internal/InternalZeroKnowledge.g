/*
 * generated by Xtext 2.17.0
 */
grammar InternalZeroKnowledge;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package de.upb.crypto.zeroknowledge.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package de.upb.crypto.zeroknowledge.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import de.upb.crypto.zeroknowledge.services.ZeroKnowledgeGrammarAccess;

}

@parser::members {

 	private ZeroKnowledgeGrammarAccess grammarAccess;

    public InternalZeroKnowledgeParser(TokenStream input, ZeroKnowledgeGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected ZeroKnowledgeGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getFunctionsFunctionDefinitionParserRuleCall_0_0());
				}
				lv_functions_0_0=ruleFunctionDefinition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"functions",
						lv_functions_0_0,
						"de.upb.crypto.zeroknowledge.ZeroKnowledge.FunctionDefinition");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getWitnessListWitnessListParserRuleCall_1_0());
				}
				lv_witnessList_1_0=ruleWitnessList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					set(
						$current,
						"witnessList",
						lv_witnessList_1_0,
						"de.upb.crypto.zeroknowledge.ZeroKnowledge.WitnessList");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=';'
			{
				newLeafNode(otherlv_2, grammarAccess.getModelAccess().getSemicolonKeyword_2());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getProofExpressionParserRuleCall_3_0());
				}
				lv_proof_3_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					set(
						$current,
						"proof",
						lv_proof_3_0,
						"de.upb.crypto.zeroknowledge.ZeroKnowledge.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=';'
			{
				newLeafNode(otherlv_4, grammarAccess.getModelAccess().getSemicolonKeyword_4());
			}
		)?
	)
;

// Entry rule entryRuleFunctionDefinition
entryRuleFunctionDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionDefinitionRule()); }
	iv_ruleFunctionDefinition=ruleFunctionDefinition
	{ $current=$iv_ruleFunctionDefinition.current; }
	EOF;

// Rule FunctionDefinition
ruleFunctionDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_IDENTIFIER
				{
					newLeafNode(lv_name_0_0, grammarAccess.getFunctionDefinitionAccess().getNameIDENTIFIERTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFunctionDefinitionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"de.upb.crypto.zeroknowledge.ZeroKnowledge.IDENTIFIER");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionDefinitionAccess().getParameterListParameterListParserRuleCall_1_0());
				}
				lv_parameterList_1_0=ruleParameterList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionDefinitionRule());
					}
					set(
						$current,
						"parameterList",
						lv_parameterList_1_0,
						"de.upb.crypto.zeroknowledge.ZeroKnowledge.ParameterList");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getFunctionDefinitionAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionDefinitionAccess().getBodyExpressionParserRuleCall_3_0());
				}
				lv_body_3_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionDefinitionRule());
					}
					set(
						$current,
						"body",
						lv_body_3_0,
						"de.upb.crypto.zeroknowledge.ZeroKnowledge.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=';'
			{
				newLeafNode(otherlv_4, grammarAccess.getFunctionDefinitionAccess().getSemicolonKeyword_4());
			}
		)?
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getFunctionDefinitionAccess().getRightCurlyBracketKeyword_5());
		}
		(
			otherlv_6=';'
			{
				newLeafNode(otherlv_6, grammarAccess.getFunctionDefinitionAccess().getSemicolonKeyword_6());
			}
		)?
	)
;

// Entry rule entryRuleParameterList
entryRuleParameterList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterListRule()); }
	iv_ruleParameterList=ruleParameterList
	{ $current=$iv_ruleParameterList.current; }
	EOF;

// Rule ParameterList
ruleParameterList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getParameterListAccess().getLeftParenthesisKeyword_0());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getParameterListAccess().getParametersParameterParserRuleCall_1_0_0());
					}
					lv_parameters_1_0=ruleParameter
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getParameterListRule());
						}
						add(
							$current,
							"parameters",
							lv_parameters_1_0,
							"de.upb.crypto.zeroknowledge.ZeroKnowledge.Parameter");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_2=','
				{
					newLeafNode(otherlv_2, grammarAccess.getParameterListAccess().getCommaKeyword_1_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getParameterListAccess().getParametersParameterParserRuleCall_1_1_1_0());
						}
						lv_parameters_3_0=ruleParameter
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getParameterListRule());
							}
							add(
								$current,
								"parameters",
								lv_parameters_3_0,
								"de.upb.crypto.zeroknowledge.ZeroKnowledge.Parameter");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getParameterListAccess().getRightParenthesisKeyword_2());
		}
	)
;

// Entry rule entryRuleParameter
entryRuleParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterRule()); }
	iv_ruleParameter=ruleParameter
	{ $current=$iv_ruleParameter.current; }
	EOF;

// Rule Parameter
ruleParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_IDENTIFIER
			{
				newLeafNode(lv_name_0_0, grammarAccess.getParameterAccess().getNameIDENTIFIERTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getParameterRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"de.upb.crypto.zeroknowledge.ZeroKnowledge.IDENTIFIER");
			}
		)
	)
;

// Entry rule entryRuleWitnessList
entryRuleWitnessList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWitnessListRule()); }
	iv_ruleWitnessList=ruleWitnessList
	{ $current=$iv_ruleWitnessList.current; }
	EOF;

// Rule WitnessList
ruleWitnessList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getWitnessListAccess().getLeftParenthesisKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getWitnessListAccess().getWitnessesWitnessParserRuleCall_1_0());
				}
				lv_witnesses_1_0=ruleWitness
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWitnessListRule());
					}
					add(
						$current,
						"witnesses",
						lv_witnesses_1_0,
						"de.upb.crypto.zeroknowledge.ZeroKnowledge.Witness");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getWitnessListAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getWitnessListAccess().getWitnessesWitnessParserRuleCall_2_1_0());
					}
					lv_witnesses_3_0=ruleWitness
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getWitnessListRule());
						}
						add(
							$current,
							"witnesses",
							lv_witnesses_3_0,
							"de.upb.crypto.zeroknowledge.ZeroKnowledge.Witness");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getWitnessListAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleWitness
entryRuleWitness returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWitnessRule()); }
	iv_ruleWitness=ruleWitness
	{ $current=$iv_ruleWitness.current; }
	EOF;

// Rule Witness
ruleWitness returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_IDENTIFIER
			{
				newLeafNode(lv_name_0_0, grammarAccess.getWitnessAccess().getNameIDENTIFIERTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getWitnessRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"de.upb.crypto.zeroknowledge.ZeroKnowledge.IDENTIFIER");
			}
		)
	)
;

// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	iv_ruleExpression=ruleExpression
	{ $current=$iv_ruleExpression.current; }
	EOF;

// Rule Expression
ruleExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getExpressionAccess().getConjunctionParserRuleCall());
	}
	this_Conjunction_0=ruleConjunction
	{
		$current = $this_Conjunction_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleConjunction
entryRuleConjunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConjunctionRule()); }
	iv_ruleConjunction=ruleConjunction
	{ $current=$iv_ruleConjunction.current; }
	EOF;

// Rule Conjunction
ruleConjunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getConjunctionAccess().getDisjunctionParserRuleCall_0());
		}
		this_Disjunction_0=ruleDisjunction
		{
			$current = $this_Disjunction_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getConjunctionAccess().getConjunctionLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					lv_operation_2_0='&'
					{
						newLeafNode(lv_operation_2_0, grammarAccess.getConjunctionAccess().getOperationAmpersandKeyword_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConjunctionRule());
						}
						setWithLastConsumed($current, "operation", lv_operation_2_0, "&");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getConjunctionAccess().getRightDisjunctionParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleDisjunction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConjunctionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"de.upb.crypto.zeroknowledge.ZeroKnowledge.Disjunction");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleDisjunction
entryRuleDisjunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDisjunctionRule()); }
	iv_ruleDisjunction=ruleDisjunction
	{ $current=$iv_ruleDisjunction.current; }
	EOF;

// Rule Disjunction
ruleDisjunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getDisjunctionAccess().getComparisonParserRuleCall_0());
		}
		this_Comparison_0=ruleComparison
		{
			$current = $this_Comparison_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getDisjunctionAccess().getDisjunctionLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					lv_operation_2_0='|'
					{
						newLeafNode(lv_operation_2_0, grammarAccess.getDisjunctionAccess().getOperationVerticalLineKeyword_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDisjunctionRule());
						}
						setWithLastConsumed($current, "operation", lv_operation_2_0, "|");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getDisjunctionAccess().getRightComparisonParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleComparison
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDisjunctionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"de.upb.crypto.zeroknowledge.ZeroKnowledge.Comparison");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleComparison
entryRuleComparison returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComparisonRule()); }
	iv_ruleComparison=ruleComparison
	{ $current=$iv_ruleComparison.current; }
	EOF;

// Rule Comparison
ruleComparison returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getComparisonAccess().getSumParserRuleCall_0());
		}
		this_Sum_0=ruleSum
		{
			$current = $this_Sum_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getComparisonAccess().getComparisonLeftAction_1_0_0_0(),
								$current);
						}
					)
					(
						(
							lv_operation_2_0='!='
							{
								newLeafNode(lv_operation_2_0, grammarAccess.getComparisonAccess().getOperationExclamationMarkEqualsSignKeyword_1_0_0_1_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getComparisonRule());
								}
								setWithLastConsumed($current, "operation", lv_operation_2_0, "!=");
							}
						)
					)
				)
				    |
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getComparisonAccess().getComparisonLeftAction_1_0_1_0(),
								$current);
						}
					)
					(
						(
							lv_operation_4_0='='
							{
								newLeafNode(lv_operation_4_0, grammarAccess.getComparisonAccess().getOperationEqualsSignKeyword_1_0_1_1_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getComparisonRule());
								}
								setWithLastConsumed($current, "operation", lv_operation_4_0, "=");
							}
						)
					)
				)
				    |
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getComparisonAccess().getComparisonLeftAction_1_0_2_0(),
								$current);
						}
					)
					(
						(
							lv_operation_6_0='>='
							{
								newLeafNode(lv_operation_6_0, grammarAccess.getComparisonAccess().getOperationGreaterThanSignEqualsSignKeyword_1_0_2_1_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getComparisonRule());
								}
								setWithLastConsumed($current, "operation", lv_operation_6_0, ">=");
							}
						)
					)
				)
				    |
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getComparisonAccess().getComparisonLeftAction_1_0_3_0(),
								$current);
						}
					)
					(
						(
							lv_operation_8_0='<='
							{
								newLeafNode(lv_operation_8_0, grammarAccess.getComparisonAccess().getOperationLessThanSignEqualsSignKeyword_1_0_3_1_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getComparisonRule());
								}
								setWithLastConsumed($current, "operation", lv_operation_8_0, "<=");
							}
						)
					)
				)
				    |
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getComparisonAccess().getComparisonLeftAction_1_0_4_0(),
								$current);
						}
					)
					(
						(
							lv_operation_10_0='>'
							{
								newLeafNode(lv_operation_10_0, grammarAccess.getComparisonAccess().getOperationGreaterThanSignKeyword_1_0_4_1_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getComparisonRule());
								}
								setWithLastConsumed($current, "operation", lv_operation_10_0, ">");
							}
						)
					)
				)
				    |
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getComparisonAccess().getComparisonLeftAction_1_0_5_0(),
								$current);
						}
					)
					(
						(
							lv_operation_12_0='<'
							{
								newLeafNode(lv_operation_12_0, grammarAccess.getComparisonAccess().getOperationLessThanSignKeyword_1_0_5_1_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getComparisonRule());
								}
								setWithLastConsumed($current, "operation", lv_operation_12_0, "<");
							}
						)
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getComparisonAccess().getRightSumParserRuleCall_1_1_0());
					}
					lv_right_13_0=ruleSum
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getComparisonRule());
						}
						set(
							$current,
							"right",
							lv_right_13_0,
							"de.upb.crypto.zeroknowledge.ZeroKnowledge.Sum");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleSum
entryRuleSum returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSumRule()); }
	iv_ruleSum=ruleSum
	{ $current=$iv_ruleSum.current; }
	EOF;

// Rule Sum
ruleSum returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getSumAccess().getProductParserRuleCall_0());
		}
		this_Product_0=ruleProduct
		{
			$current = $this_Product_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getSumAccess().getSumLeftAction_1_0_0_0(),
								$current);
						}
					)
					(
						(
							lv_operation_2_0='+'
							{
								newLeafNode(lv_operation_2_0, grammarAccess.getSumAccess().getOperationPlusSignKeyword_1_0_0_1_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getSumRule());
								}
								setWithLastConsumed($current, "operation", lv_operation_2_0, "+");
							}
						)
					)
				)
				    |
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getSumAccess().getSumLeftAction_1_0_1_0(),
								$current);
						}
					)
					(
						(
							lv_operation_4_0='-'
							{
								newLeafNode(lv_operation_4_0, grammarAccess.getSumAccess().getOperationHyphenMinusKeyword_1_0_1_1_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getSumRule());
								}
								setWithLastConsumed($current, "operation", lv_operation_4_0, "-");
							}
						)
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getSumAccess().getRightProductParserRuleCall_1_1_0());
					}
					lv_right_5_0=ruleProduct
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSumRule());
						}
						set(
							$current,
							"right",
							lv_right_5_0,
							"de.upb.crypto.zeroknowledge.ZeroKnowledge.Product");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleProduct
entryRuleProduct returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProductRule()); }
	iv_ruleProduct=ruleProduct
	{ $current=$iv_ruleProduct.current; }
	EOF;

// Rule Product
ruleProduct returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getProductAccess().getPowerParserRuleCall_0());
		}
		this_Power_0=rulePower
		{
			$current = $this_Power_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getProductAccess().getProductLeftAction_1_0_0_0(),
								$current);
						}
					)
					(
						(
							lv_operation_2_0='*'
							{
								newLeafNode(lv_operation_2_0, grammarAccess.getProductAccess().getOperationAsteriskKeyword_1_0_0_1_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getProductRule());
								}
								setWithLastConsumed($current, "operation", lv_operation_2_0, "*");
							}
						)
					)
				)
				    |
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getProductAccess().getProductLeftAction_1_0_1_0(),
								$current);
						}
					)
					(
						(
							lv_operation_4_0='/'
							{
								newLeafNode(lv_operation_4_0, grammarAccess.getProductAccess().getOperationSolidusKeyword_1_0_1_1_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getProductRule());
								}
								setWithLastConsumed($current, "operation", lv_operation_4_0, "/");
							}
						)
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getProductAccess().getRightPowerParserRuleCall_1_1_0());
					}
					lv_right_5_0=rulePower
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getProductRule());
						}
						set(
							$current,
							"right",
							lv_right_5_0,
							"de.upb.crypto.zeroknowledge.ZeroKnowledge.Power");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRulePower
entryRulePower returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPowerRule()); }
	iv_rulePower=rulePower
	{ $current=$iv_rulePower.current; }
	EOF;

// Rule Power
rulePower returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPowerAccess().getConstructParserRuleCall_0());
		}
		this_Construct_0=ruleConstruct
		{
			$current = $this_Construct_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getPowerAccess().getPowerLeftAction_1_0(),
						$current);
				}
			)
			otherlv_2='^'
			{
				newLeafNode(otherlv_2, grammarAccess.getPowerAccess().getCircumflexAccentKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPowerAccess().getRightPowerParserRuleCall_1_2_0());
					}
					lv_right_3_0=rulePower
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPowerRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"de.upb.crypto.zeroknowledge.ZeroKnowledge.Power");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleConstruct
entryRuleConstruct returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConstructRule()); }
	iv_ruleConstruct=ruleConstruct
	{ $current=$iv_ruleConstruct.current; }
	EOF;

// Rule Construct
ruleConstruct returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getConstructAccess().getStringLiteralParserRuleCall_0());
		}
		this_StringLiteral_0=ruleStringLiteral
		{
			$current = $this_StringLiteral_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			((
				(
				)
				'('
				(
					(
						ruleConjunction
					)
				)
				','
			)
			)=>
			{
				newCompositeNode(grammarAccess.getConstructAccess().getTupleParserRuleCall_1());
			}
			this_Tuple_1=ruleTuple
			{
				$current = $this_Tuple_1.current;
				afterParserOrEnumRuleCall();
			}
		)
		    |
		{
			newCompositeNode(grammarAccess.getConstructAccess().getNegativeParserRuleCall_2());
		}
		this_Negative_2=ruleNegative
		{
			$current = $this_Negative_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleStringLiteral
entryRuleStringLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStringLiteralRule()); }
	iv_ruleStringLiteral=ruleStringLiteral
	{ $current=$iv_ruleStringLiteral.current; }
	EOF;

// Rule StringLiteral
ruleStringLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_STRING_LITERAL
			{
				newLeafNode(lv_value_0_0, grammarAccess.getStringLiteralAccess().getValueSTRING_LITERALTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getStringLiteralRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"de.upb.crypto.zeroknowledge.ZeroKnowledge.STRING_LITERAL");
			}
		)
	)
;

// Entry rule entryRuleTuple
entryRuleTuple returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTupleRule()); }
	iv_ruleTuple=ruleTuple
	{ $current=$iv_ruleTuple.current; }
	EOF;

// Rule Tuple
ruleTuple returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			((
				(
				)
				'('
				(
					(
						ruleConjunction
					)
				)
				','
			)
			)=>
			(
				(
					{
						$current = forceCreateModelElement(
							grammarAccess.getTupleAccess().getTupleAction_0_0_0(),
							$current);
					}
				)
				otherlv_1='('
				{
					newLeafNode(otherlv_1, grammarAccess.getTupleAccess().getLeftParenthesisKeyword_0_0_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getTupleAccess().getElementsConjunctionParserRuleCall_0_0_2_0());
						}
						lv_elements_2_0=ruleConjunction
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTupleRule());
							}
							add(
								$current,
								"elements",
								lv_elements_2_0,
								"de.upb.crypto.zeroknowledge.ZeroKnowledge.Conjunction");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getTupleAccess().getCommaKeyword_0_0_3());
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getTupleAccess().getElementsConjunctionParserRuleCall_1_0());
				}
				lv_elements_4_0=ruleConjunction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTupleRule());
					}
					add(
						$current,
						"elements",
						lv_elements_4_0,
						"de.upb.crypto.zeroknowledge.ZeroKnowledge.Conjunction");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getTupleAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTupleAccess().getElementsConjunctionParserRuleCall_2_1_0());
					}
					lv_elements_6_0=ruleConjunction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTupleRule());
						}
						add(
							$current,
							"elements",
							lv_elements_6_0,
							"de.upb.crypto.zeroknowledge.ZeroKnowledge.Conjunction");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_7=')'
		{
			newLeafNode(otherlv_7, grammarAccess.getTupleAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleNegative
entryRuleNegative returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNegativeRule()); }
	iv_ruleNegative=ruleNegative
	{ $current=$iv_ruleNegative.current; }
	EOF;

// Rule Negative
ruleNegative returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getNegativeAccess().getNegativeAction_0_0(),
						$current);
				}
			)
			otherlv_1='-'
			{
				newLeafNode(otherlv_1, grammarAccess.getNegativeAccess().getHyphenMinusKeyword_0_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getNegativeAccess().getTermValueParserRuleCall_0_2_0());
					}
					lv_term_2_0=ruleValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNegativeRule());
						}
						set(
							$current,
							"term",
							lv_term_2_0,
							"de.upb.crypto.zeroknowledge.ZeroKnowledge.Value");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		{
			newCompositeNode(grammarAccess.getNegativeAccess().getValueParserRuleCall_1());
		}
		this_Value_3=ruleValue
		{
			$current = $this_Value_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleValue
entryRuleValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getValueRule()); }
	iv_ruleValue=ruleValue
	{ $current=$iv_ruleValue.current; }
	EOF;

// Rule Value
ruleValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getValueAccess().getFunctionCallParserRuleCall_0());
		}
		this_FunctionCall_0=ruleFunctionCall
		{
			$current = $this_FunctionCall_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getValueAccess().getVariableParserRuleCall_1());
		}
		this_Variable_1=ruleVariable
		{
			$current = $this_Variable_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getValueAccess().getNumberLiteralParserRuleCall_2());
		}
		this_NumberLiteral_2=ruleNumberLiteral
		{
			$current = $this_NumberLiteral_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			otherlv_3='('
			{
				newLeafNode(otherlv_3, grammarAccess.getValueAccess().getLeftParenthesisKeyword_3_0());
			}
			{
				newCompositeNode(grammarAccess.getValueAccess().getBracketsParserRuleCall_3_1());
			}
			this_Brackets_4=ruleBrackets
			{
				$current = $this_Brackets_4.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_5=')'
			{
				newLeafNode(otherlv_5, grammarAccess.getValueAccess().getRightParenthesisKeyword_3_2());
			}
		)
	)
;

// Entry rule entryRuleFunctionCall
entryRuleFunctionCall returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionCallRule()); }
	iv_ruleFunctionCall=ruleFunctionCall
	{ $current=$iv_ruleFunctionCall.current; }
	EOF;

// Rule FunctionCall
ruleFunctionCall returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getFunctionCallAccess().getFunctionCallAction_0(),
					$current);
			}
		)
		(
			(
				(RULE_IDENTIFIER)=>
				(
					(
						(
							lv_name_1_0=RULE_IDENTIFIER
							{
								newLeafNode(lv_name_1_0, grammarAccess.getFunctionCallAccess().getNameIDENTIFIERTerminalRuleCall_1_0_0_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getFunctionCallRule());
								}
								setWithLastConsumed(
									$current,
									"name",
									lv_name_1_0,
									"de.upb.crypto.zeroknowledge.ZeroKnowledge.IDENTIFIER");
							}
						)
					)
					otherlv_2='('
					{
						newLeafNode(otherlv_2, grammarAccess.getFunctionCallAccess().getLeftParenthesisKeyword_1_0_0_1());
					}
				)
			)
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getFunctionCallAccess().getArgumentsConjunctionParserRuleCall_1_1_0_0());
						}
						lv_arguments_3_0=ruleConjunction
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFunctionCallRule());
							}
							add(
								$current,
								"arguments",
								lv_arguments_3_0,
								"de.upb.crypto.zeroknowledge.ZeroKnowledge.Conjunction");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_4=','
					{
						newLeafNode(otherlv_4, grammarAccess.getFunctionCallAccess().getCommaKeyword_1_1_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getFunctionCallAccess().getArgumentsConjunctionParserRuleCall_1_1_1_1_0());
							}
							lv_arguments_5_0=ruleConjunction
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getFunctionCallRule());
								}
								add(
									$current,
									"arguments",
									lv_arguments_5_0,
									"de.upb.crypto.zeroknowledge.ZeroKnowledge.Conjunction");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)?
			otherlv_6=')'
			{
				newLeafNode(otherlv_6, grammarAccess.getFunctionCallAccess().getRightParenthesisKeyword_1_2());
			}
		)
	)
;

// Entry rule entryRuleVariable
entryRuleVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVariableRule()); }
	iv_ruleVariable=ruleVariable
	{ $current=$iv_ruleVariable.current; }
	EOF;

// Rule Variable
ruleVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_IDENTIFIER
			{
				newLeafNode(lv_name_0_0, grammarAccess.getVariableAccess().getNameIDENTIFIERTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getVariableRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"de.upb.crypto.zeroknowledge.ZeroKnowledge.IDENTIFIER");
			}
		)
	)
;

// Entry rule entryRuleNumberLiteral
entryRuleNumberLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNumberLiteralRule()); }
	iv_ruleNumberLiteral=ruleNumberLiteral
	{ $current=$iv_ruleNumberLiteral.current; }
	EOF;

// Rule NumberLiteral
ruleNumberLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_INT
			{
				newLeafNode(lv_value_0_0, grammarAccess.getNumberLiteralAccess().getValueINTTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getNumberLiteralRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"de.upb.crypto.zeroknowledge.ZeroKnowledge.INT");
			}
		)
	)
;

// Entry rule entryRuleBrackets
entryRuleBrackets returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBracketsRule()); }
	iv_ruleBrackets=ruleBrackets
	{ $current=$iv_ruleBrackets.current; }
	EOF;

// Rule Brackets
ruleBrackets returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getBracketsAccess().getBracketsAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getBracketsAccess().getContentExpressionParserRuleCall_1_0());
				}
				lv_content_1_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBracketsRule());
					}
					set(
						$current,
						"content",
						lv_content_1_0,
						"de.upb.crypto.zeroknowledge.ZeroKnowledge.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

RULE_INT : ('0'..'9')+;

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WHITESPACE : (' '|'\t'|'\r'|'\n')+;

RULE_IDENTIFIER : ('a'..'z'|'A'..'Z') ('a'..'z'|'A'..'Z'|'0'..'9'|'_'|'\'')*;

RULE_STRING_LITERAL : '"' ('\\' .|~(('\\'|'"')))* '"';
