/**
 * generated by Xtext 2.17.0
 */
package de.upb.crypto.zeroknowledge.zeroKnowledge.impl;

import de.upb.crypto.zeroknowledge.zeroKnowledge.Expression;
import de.upb.crypto.zeroknowledge.zeroKnowledge.FunctionDefinition;
import de.upb.crypto.zeroknowledge.zeroKnowledge.Model;
import de.upb.crypto.zeroknowledge.zeroKnowledge.WitnessList;
import de.upb.crypto.zeroknowledge.zeroKnowledge.ZeroKnowledgePackage;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Model</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link de.upb.crypto.zeroknowledge.zeroKnowledge.impl.ModelImpl#getFunctions <em>Functions</em>}</li>
 *   <li>{@link de.upb.crypto.zeroknowledge.zeroKnowledge.impl.ModelImpl#getWitnessList <em>Witness List</em>}</li>
 *   <li>{@link de.upb.crypto.zeroknowledge.zeroKnowledge.impl.ModelImpl#getProof <em>Proof</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ModelImpl extends MinimalEObjectImpl.Container implements Model
{
  /**
   * The cached value of the '{@link #getFunctions() <em>Functions</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFunctions()
   * @generated
   * @ordered
   */
  protected EList<FunctionDefinition> functions;

  /**
   * The cached value of the '{@link #getWitnessList() <em>Witness List</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWitnessList()
   * @generated
   * @ordered
   */
  protected WitnessList witnessList;

  /**
   * The cached value of the '{@link #getProof() <em>Proof</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getProof()
   * @generated
   * @ordered
   */
  protected Expression proof;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ModelImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return ZeroKnowledgePackage.Literals.MODEL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<FunctionDefinition> getFunctions()
  {
    if (functions == null)
    {
      functions = new EObjectContainmentEList<FunctionDefinition>(FunctionDefinition.class, this, ZeroKnowledgePackage.MODEL__FUNCTIONS);
    }
    return functions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public WitnessList getWitnessList()
  {
    return witnessList;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetWitnessList(WitnessList newWitnessList, NotificationChain msgs)
  {
    WitnessList oldWitnessList = witnessList;
    witnessList = newWitnessList;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ZeroKnowledgePackage.MODEL__WITNESS_LIST, oldWitnessList, newWitnessList);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setWitnessList(WitnessList newWitnessList)
  {
    if (newWitnessList != witnessList)
    {
      NotificationChain msgs = null;
      if (witnessList != null)
        msgs = ((InternalEObject)witnessList).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ZeroKnowledgePackage.MODEL__WITNESS_LIST, null, msgs);
      if (newWitnessList != null)
        msgs = ((InternalEObject)newWitnessList).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ZeroKnowledgePackage.MODEL__WITNESS_LIST, null, msgs);
      msgs = basicSetWitnessList(newWitnessList, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ZeroKnowledgePackage.MODEL__WITNESS_LIST, newWitnessList, newWitnessList));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Expression getProof()
  {
    return proof;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetProof(Expression newProof, NotificationChain msgs)
  {
    Expression oldProof = proof;
    proof = newProof;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ZeroKnowledgePackage.MODEL__PROOF, oldProof, newProof);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setProof(Expression newProof)
  {
    if (newProof != proof)
    {
      NotificationChain msgs = null;
      if (proof != null)
        msgs = ((InternalEObject)proof).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ZeroKnowledgePackage.MODEL__PROOF, null, msgs);
      if (newProof != null)
        msgs = ((InternalEObject)newProof).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ZeroKnowledgePackage.MODEL__PROOF, null, msgs);
      msgs = basicSetProof(newProof, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ZeroKnowledgePackage.MODEL__PROOF, newProof, newProof));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case ZeroKnowledgePackage.MODEL__FUNCTIONS:
        return ((InternalEList<?>)getFunctions()).basicRemove(otherEnd, msgs);
      case ZeroKnowledgePackage.MODEL__WITNESS_LIST:
        return basicSetWitnessList(null, msgs);
      case ZeroKnowledgePackage.MODEL__PROOF:
        return basicSetProof(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case ZeroKnowledgePackage.MODEL__FUNCTIONS:
        return getFunctions();
      case ZeroKnowledgePackage.MODEL__WITNESS_LIST:
        return getWitnessList();
      case ZeroKnowledgePackage.MODEL__PROOF:
        return getProof();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case ZeroKnowledgePackage.MODEL__FUNCTIONS:
        getFunctions().clear();
        getFunctions().addAll((Collection<? extends FunctionDefinition>)newValue);
        return;
      case ZeroKnowledgePackage.MODEL__WITNESS_LIST:
        setWitnessList((WitnessList)newValue);
        return;
      case ZeroKnowledgePackage.MODEL__PROOF:
        setProof((Expression)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case ZeroKnowledgePackage.MODEL__FUNCTIONS:
        getFunctions().clear();
        return;
      case ZeroKnowledgePackage.MODEL__WITNESS_LIST:
        setWitnessList((WitnessList)null);
        return;
      case ZeroKnowledgePackage.MODEL__PROOF:
        setProof((Expression)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case ZeroKnowledgePackage.MODEL__FUNCTIONS:
        return functions != null && !functions.isEmpty();
      case ZeroKnowledgePackage.MODEL__WITNESS_LIST:
        return witnessList != null;
      case ZeroKnowledgePackage.MODEL__PROOF:
        return proof != null;
    }
    return super.eIsSet(featureID);
  }

} //ModelImpl
